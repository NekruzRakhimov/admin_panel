basePath: /
definitions:
  model.RightDTO:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
      is_attached:
        type: boolean
      section:
        type: string
    type: object
  model.RoleDTO:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
      is_attached:
        type: boolean
      name:
        type: string
      rights:
        items:
          $ref: '#/definitions/model.RightDTO'
        type: array
      status:
        type: string
    type: object
  model.User:
    properties:
      email:
        type: string
      id:
        type: integer
      last_name:
        type: string
      login:
        type: string
      name:
        type: string
      password:
        type: string
      roles:
        items:
          $ref: '#/definitions/model.RoleDTO'
        type: array
      status:
        type: string
      surname:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: aziz.rahimov0001@gmail.com
    name: API Support
    url: http://www.swagger.io/support
  description: Админка, чтобы проверить роуты и права пользователей.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Gin Swagger Admin-Panel Api
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - root
  /ping:
    get:
      consumes:
      - application/json
      description: Ping.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Ping pong
      tags:
      - root
  /users/:
    get:
      consumes:
      - application/json
      description: Get All Users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get All Users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Add by json user
      parameters:
      - description: Add user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Add an user
      tags:
      - users
  /users/{id}:
    delete:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update by json user
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update an user
      tags:
      - users
schemes:
- http
swagger: "2.0"
