basePath: /
definitions:
  controller.LoginData:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  model.Address:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
    type: object
  model.Brand:
    properties:
      brand_arr:
        items:
          properties:
            brand_code:
              type: string
            brand_name:
              type: string
          type: object
        type: array
    type: object
  model.Client:
    properties:
      account_number:
        type: string
      bank:
        type: string
      bin:
        type: string
      country:
        type: string
      id_1C:
        type: string
      name:
        type: string
      reason:
        type: string
    type: object
  model.ClientBin:
    properties:
      bin:
        type: string
    type: object
  model.Contract:
    properties:
      comment:
        type: string
      contract_parameters:
        $ref: '#/definitions/model.ContractParameters'
      created_at:
        type: string
      discount_brand:
        description: "Brand           string `json:\"brand\"`\n\tDiscountPercent string
          `json:\"discount_percent\"`"
        items:
          $ref: '#/definitions/model.DiscountBrand'
        type: array
      discounts:
        items:
          $ref: '#/definitions/model.Discount'
        type: array
      extend_date:
        type: string
      id:
        type: integer
      is_extend_contract:
        type: boolean
      is_individ:
        type: boolean
      kam:
        type: string
      manager:
        type: string
      products:
        items:
          $ref: '#/definitions/model.Product'
        type: array
      requisites:
        $ref: '#/definitions/model.Requisites'
      status:
        type: string
      supplier_company_manager:
        $ref: '#/definitions/model.SupplierCompanyManager'
      type:
        type: string
      updated_at:
        type: string
      with_temperature_conditions:
        type: boolean
    type: object
  model.ContractCounterparty:
    properties:
      discount:
        type: integer
      id_1C:
        type: string
      name:
        type: string
      price_type:
        type: string
    type: object
  model.ContractMiniInfo:
    properties:
      amount:
        type: number
      author:
        type: string
      beneficiary:
        type: string
      contract_number:
        type: string
      contract_type:
        type: string
      contractor_name:
        type: string
      created_at:
        type: string
      extend_date:
        type: string
      id:
        type: integer
      is_extend_contract:
        type: boolean
      status:
        type: string
      updated_at:
        type: string
    type: object
  model.ContractParameters:
    properties:
      contract_amount:
        type: number
      contract_date:
        type: string
      contract_number:
        type: string
      currency:
        type: string
      date_of_delivery:
        type: string
      delivery_address:
        items:
          type: string
        type: array
      delivery_time_interval:
        description: интервал времени поставки после поступления денежых средств
        type: integer
      end_date:
        type: string
      extend_date:
        type: string
      frequency_deferred_discount:
        description: 'Кратность расчета отложенной скидки TODO: возможно нужно поменять'
        type: string
      is_extend_contract:
        type: boolean
      prepayment:
        type: number
      return_time_delivery:
        description: время возврата при условии не поставки
        type: integer
      start_date:
        type: string
    type: object
  model.ContractStatusHistory:
    properties:
      author:
        type: string
      end_date:
        type: string
      id:
        type: integer
      start_date:
        type: string
      status:
        type: string
    type: object
  model.Counterparty:
    properties:
      bin:
        type: string
      contracts:
        items:
          $ref: '#/definitions/model.ContractCounterparty'
        type: array
      id_1C:
        type: string
      name:
        type: string
      organization:
        type: string
    type: object
  model.Country:
    properties:
      country_arr:
        items:
          properties:
            country_code:
              type: string
            country_name:
              type: string
          type: object
        type: array
    type: object
  model.Currency:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
    type: object
  model.DateSales:
    properties:
      client_bin:
        type: string
      dateend:
        type: string
      datestart:
        type: string
      type:
        type: string
      type_parameters:
        items:
          type: string
        type: array
      typeValue:
        type: string
    type: object
  model.Dictionary:
    properties:
      author:
        type: string
      id:
        type: integer
      last_update:
        type: string
      name:
        type: string
    type: object
  model.DictionaryValue:
    properties:
      dictionary_id:
        type: integer
      id:
        type: integer
      value:
        type: string
    type: object
  model.Discount:
    properties:
      code:
        type: string
      discount_amount:
        type: integer
      is_selected:
        type: boolean
      name:
        type: string
      periods:
        items:
          $ref: '#/definitions/model.DiscountPeriod'
        type: array
    type: object
  model.DiscountBrand:
    properties:
      brand_code:
        type: string
      brand_name:
        type: string
      contract_id:
        type: integer
      discount_percent:
        type: number
      id:
        type: integer
    type: object
  model.DiscountPeriod:
    properties:
      period_from:
        type: string
      period_to:
        type: string
      reward_amount:
        type: integer
      total_amount:
        type: number
    type: object
  model.FrequencyDeferredDiscount:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
    type: object
  model.Notification:
    properties:
      bin:
        type: string
      contract_date:
        type: string
      contract_number:
        type: string
      email:
        type: string
      id:
        type: integer
      status:
        type: boolean
      type:
        type: string
    type: object
  model.Position:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
    type: object
  model.Product:
    properties:
      currency:
        type: string
      discount_percent:
        type: number
      lease_plan:
        type: number
      price:
        type: number
      producer:
        type: string
      product_name:
        type: string
      product_number:
        type: string
      sku:
        type: string
      storage_condition:
        type: string
      substance:
        type: string
    type: object
  model.RBRequest:
    properties:
      bin:
        type: string
      contractor_name:
        type: string
      period_from:
        type: string
      period_to:
        type: string
    type: object
  model.RbDTO:
    properties:
      TotalWithoutDiscount:
        type: number
      brand_name:
        type: string
      contract_number:
        type: string
      discount_amount:
        type: number
      discount_percent:
        type: number
      end_date:
        type: string
      id:
        type: integer
      lease_plan:
        type: number
      product_code:
        type: string
      reward_amount:
        type: number
      start_date:
        type: string
    type: object
  model.Requisites:
    properties:
      account_number:
        type: string
      bank_beneficiary_address:
        type: string
      bank_of_beneficiary:
        type: string
      beneficiary:
        type: string
      bin:
        type: string
      contractor_name:
        type: string
      iic:
        type: string
      phone:
        type: string
      swift_code:
        type: string
    type: object
  model.Right:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
      section:
        type: string
    type: object
  model.RightDTO:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
      is_attached:
        type: boolean
      section:
        type: string
    type: object
  model.Role:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      rights:
        items:
          $ref: '#/definitions/model.RightDTO'
        type: array
      status:
        type: string
    type: object
  model.RoleDTO:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
      is_attached:
        type: boolean
      name:
        type: string
      omitempty:
        items:
          $ref: '#/definitions/model.RightDTO'
        type: array
      status:
        type: string
    type: object
  model.Sales:
    properties:
      sales_arr:
        items:
          properties:
            brand_code:
              type: string
            brand_name:
              type: string
            date:
              type: string
            product_code:
              type: string
            product_name:
              type: string
            qnt_total:
              type: number
            total:
              type: number
          type: object
        type: array
    type: object
  model.SearchContract:
    properties:
      amount:
        type: string
      author:
        type: string
      beneficiary:
        type: string
      comment:
        type: string
      contract_number:
        type: string
      contract_type:
        type: string
      created_at:
        type: string
      end_date:
        type: string
      id:
        type: integer
      status:
        type: string
      updated_at:
        type: string
    type: object
  model.SupplierCompanyManager:
    properties:
      base:
        description: Основание - надо понять как правильно назвать это
        type: string
      country:
        type: string
      email:
        type: string
      full_name:
        type: string
      phone:
        type: string
      position:
        type: string
      skype:
        type: string
      work_phone:
        type: string
    type: object
  model.User:
    properties:
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      login:
        type: string
      organization:
        type: string
      password:
        type: string
      roles:
        items:
          $ref: '#/definitions/model.RoleDTO'
        type: array
      status:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: aziz.rahimov0001@gmail.com
    name: API Support
    url: http://www.swagger.io/support
  description: Админка, чтобы проверить роуты и права пользователей.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Gin Swagger Admin-Panel Api
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - root
  /add_brand/:
    get:
      consumes:
      - application/json
      description: получаем данные о брендах
      parameters:
      - description: brand_name
        in: query
        name: brand_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Sales'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: получаем данные о брендах
      tags:
      - report
  /attach_right/{role_id}/{right_id}:
    delete:
      consumes:
      - application/json
      description: Detach Right to Role
      parameters:
      - description: role ID
        in: path
        name: role_id
        required: true
        type: string
      - description: right ID
        in: path
        name: right_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Detach Right to Role
      tags:
      - roles
    post:
      consumes:
      - application/json
      description: Attach Right to Role
      parameters:
      - description: role ID
        in: path
        name: role_id
        required: true
        type: string
      - description: right ID
        in: path
        name: right_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Attach Right to Role
      tags:
      - roles
  /attach_role/{user_id}/{role_id}:
    post:
      consumes:
      - application/json
      description: Attach by json Role To User
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      - description: role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Attach Role To User
      tags:
      - users
  /brands/:
    get:
      consumes:
      - application/json
      description: Получаем список брендов
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Brand'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Получаем список брендов
      tags:
      - brands
  /change_date_contract/:
    get:
      consumes:
      - application/json
      description: |-
        Продлить дату окончание договора по ID и у которого статус в работе
        Пример:
        change_date_contract/?extend_contract=true&id=163
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Продлить дату окончание договора
      tags:
      - contracts
  /client_search:
    post:
      consumes:
      - application/json
      description: add by json account
      parameters:
      - description: bin
        in: body
        name: bin
        required: true
        schema:
          $ref: '#/definitions/model.ClientBin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Client'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Search Client
      tags:
      - search
  /contract/:
    get:
      consumes:
      - application/json
      description: Gel All Contract
      parameters:
      - description: status of contract
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ContractMiniInfo'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get All Contracts
      tags:
      - contracts
  /contract/{id}/details:
    get:
      consumes:
      - application/json
      description: Gel Contract Details
      parameters:
      - description: id of contract
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Contract'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get Contract Details
      tags:
      - contracts
  /contract/{type}:
    post:
      consumes:
      - application/json
      description: Creating contract
      parameters:
      - description: creating contract
        in: body
        name: contract
        required: true
        schema:
          $ref: '#/definitions/model.Contract'
      - description: type of contract
        in: query
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Creating contract
      tags:
      - contracts
  /contract/{type}/{id}:
    put:
      consumes:
      - application/json
      description: Editing contract
      parameters:
      - description: editing contract
        in: body
        name: contract
        required: true
        schema:
          $ref: '#/definitions/model.Contract'
      - description: id of contract
        in: path
        name: id
        required: true
        type: string
      - description: type of contract
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Editing contract
      tags:
      - contracts
  /contract/additional_agreement/{id}:
    post:
      consumes:
      - application/json
      description: Creating additional agreement
      parameters:
      - description: creating contract
        in: body
        name: contract
        required: true
        schema:
          $ref: '#/definitions/model.Contract'
      - description: id договора на основе которого создаётся ДС
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Creating additional agreement
      tags:
      - contracts
  /contract/cancel/{id}:
    put:
      consumes:
      - application/json
      description: Cancel contract
      parameters:
      - description: id of contract
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Cancel contract
      tags:
      - contracts
  /contract/conform/{id}:
    put:
      consumes:
      - application/json
      description: Conform contract
      parameters:
      - description: id of contract
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Conform contract
      tags:
      - contracts
  /contract/finish/{id}:
    put:
      consumes:
      - application/json
      description: Finish contract
      parameters:
      - description: id of contract
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Finish contract
      tags:
      - contracts
  /contract/history/{id}:
    get:
      consumes:
      - application/json
      description: Gel Contract History
      parameters:
      - description: id of contract
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Contract'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get Contract History
      tags:
      - contracts
  /contract/revision/{id}:
    put:
      consumes:
      - application/json
      description: Revision contract
      parameters:
      - description: id of contract
        in: path
        name: id
        required: true
        type: string
      - description: comment of contract
        in: query
        name: comment
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Revision contract
      tags:
      - contracts
  /contract/status_history/{id}:
    get:
      consumes:
      - application/json
      description: Gel Contract Status Changes History
      parameters:
      - description: id of contract
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ContractStatusHistory'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get Contract Status Changes History
      tags:
      - contracts
  /counterparty/{client}:
    get:
      consumes:
      - application/json
      description: Берет данные контрагента
      parameters:
      - description: BINClient
        in: path
        name: client
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Counterparty'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get CounterpartyContract
      tags:
      - contracts
  /country/:
    get:
      consumes:
      - application/json
      description: Получаем список стран
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Country'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Получаем список стран
      tags:
      - country
  /detach_role/{user_id}/{role_id}:
    delete:
      consumes:
      - application/json
      description: Detach by json Role To User
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      - description: role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Detach Role To User
      tags:
      - users
  /dictionary:
    get:
      consumes:
      - application/json
      description: Gel All Dictionaries
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Dictionary'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get All Dictionaries
      tags:
      - dictionary
    post:
      consumes:
      - application/json
      description: Create Dictionary
      parameters:
      - description: Create Dictionary
        in: body
        name: Dictionary
        required: true
        schema:
          $ref: '#/definitions/model.Dictionary'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create Dictionary
      tags:
      - dictionary
  /dictionary/{id}:
    delete:
      parameters:
      - description: dictionary ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Dictionary user by ID
      tags:
      - dictionary
    get:
      consumes:
      - application/json
      description: Gel All Dictionaries
      parameters:
      - description: Dictionary ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Dictionary'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get All Dictionaries
      tags:
      - dictionary
    put:
      consumes:
      - application/json
      description: Update Dictionary
      parameters:
      - description: Dictionary ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update account
        in: body
        name: Dictionary
        required: true
        schema:
          $ref: '#/definitions/model.Dictionary'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update Dictionary user
      tags:
      - dictionary
  /dictionary/{id}/value:
    get:
      consumes:
      - application/json
      description: Gel All Dictionary Values
      parameters:
      - description: dictionary ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.DictionaryValue'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get All Dictionary Values
      tags:
      - dictionary_values
    post:
      consumes:
      - application/json
      description: Create Dictionary Value
      parameters:
      - description: dictionary ID
        in: path
        name: id
        required: true
        type: string
      - description: Dictionary Value
        in: body
        name: DictionaryValue
        required: true
        schema:
          $ref: '#/definitions/model.DictionaryValue'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create Dictionary Value
      tags:
      - dictionary_values
  /dictionary/{id}/value/{value_id}:
    delete:
      parameters:
      - description: dictionary ID
        in: path
        name: id
        required: true
        type: string
      - description: value ID
        in: path
        name: value_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete Dictionary Values by ID
      tags:
      - dictionary_values
    put:
      consumes:
      - application/json
      description: Update Dictionary Values
      parameters:
      - description: dictionary ID
        in: path
        name: id
        required: true
        type: string
      - description: Dictionary Value
        in: body
        name: DictionaryValue
        required: true
        schema:
          $ref: '#/definitions/model.DictionaryValue'
      - description: value ID
        in: path
        name: value_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update Dictionary Values
      tags:
      - dictionary_values
  /dictionary/addresses:
    get:
      consumes:
      - application/json
      description: Gel All Addresses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Address'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get All Addresses
      tags:
      - dictionary
  /dictionary/currencies:
    get:
      consumes:
      - application/json
      description: Gel All Currencies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Currency'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get All Currencies
      tags:
      - dictionary
  /dictionary/frequency_deferred_discounts:
    get:
      consumes:
      - application/json
      description: Gel All FrequencyDeferredDiscounts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.FrequencyDeferredDiscount'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get All FrequencyDeferredDiscounts
      tags:
      - dictionary
  /dictionary/positions:
    get:
      consumes:
      - application/json
      description: Gel All Positions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Position'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get All Positions
      tags:
      - dictionary
  /login:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: login
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controller.LoginData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: login
      tags:
      - Auth
  /notifications:
    get:
      consumes:
      - application/json
      description: get notifications
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Notification'
            type: array
      summary: List Notifications
      tags:
      - notifications
  /reports/doubted_discounts:
    post:
      consumes:
      - application/json
      description: получение списка скидок для утверждения условия
      parameters:
      - description: getting doubted discounts
        in: body
        name: contract
        required: true
        schema:
          $ref: '#/definitions/model.RBRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Discount'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: doubted_discounts
      tags:
      - reports
  /reports/rb:
    post:
      consumes:
      - application/json
      description: получение отчета по РБ
      parameters:
      - description: forming report
        in: body
        name: contract
        required: true
        schema:
          $ref: '#/definitions/model.RBRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.RbDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get Report RB
      tags:
      - reports
  /rights/:
    get:
      consumes:
      - application/json
      description: Get All Rights by Admin
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Right'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get All Rights by Admin
      tags:
      - rights
    post:
      consumes:
      - application/json
      description: Add Right by Admin
      parameters:
      - description: add role
        in: body
        name: right
        required: true
        schema:
          $ref: '#/definitions/model.Right'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Add Right by Admin
      tags:
      - rights
  /rights/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Right by Admin
      parameters:
      - description: right ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete Right by Admin
      tags:
      - rights
    put:
      consumes:
      - application/json
      description: Update Right by Admin
      parameters:
      - description: rigth ID
        in: path
        name: id
        required: true
        type: string
      - description: update right
        in: body
        name: right
        required: true
        schema:
          $ref: '#/definitions/model.Right'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update Right by Admin
      tags:
      - rights
  /rights/{id}/details:
    get:
      consumes:
      - application/json
      description: Get Right by ID
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Right'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get Right by ID
      tags:
      - rights
  /roles/:
    get:
      consumes:
      - application/json
      description: Get All Roles by Admin
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Role'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get All Roles by Admin
      tags:
      - roles
    post:
      consumes:
      - application/json
      description: Add Role by Admin
      parameters:
      - description: Add role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Add Role by Admin
      tags:
      - roles
  /roles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Role by Admin
      parameters:
      - description: role ID
        in: path
        name: id
        required: true
        type: string
      - description: Update role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete Role by ID Admin
      tags:
      - roles
    put:
      consumes:
      - application/json
      description: Update Role by Admin
      parameters:
      - description: role ID
        in: path
        name: id
        required: true
        type: string
      - description: Update role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update Role by Admin
      tags:
      - roles
  /roles/{id}/details:
    get:
      consumes:
      - application/json
      description: et Role by ID
      parameters:
      - description: role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Role'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get Role by ID
      tags:
      - roles
  /sales/:
    post:
      consumes:
      - application/json
      description: Получаем список продаж и кол-во
      parameters:
      - description: Add BrandName
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.DateSales'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Sales'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Получаем список продаж и кол-во
      tags:
      - sales
  /search_contract/:
    get:
      consumes:
      - application/json
      description: add by json account
      parameters:
      - description: contract_number
        in: query
        name: contract_number
        required: true
        type: string
      - description: status
        in: query
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SearchContract'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Search Contract by Number
      tags:
      - search
  /search_history/{id}:
    get:
      consumes:
      - application/json
      description: |-
        поиск либо по одним из параметров - contract_number, author, beneficiary:
        Примеры:
        1. target=contract_number&param=00001
        2. target=author&param=Иван
        3. target=beneficiary&param=ТОО «AK NIET GROUP
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: target
        in: query
        name: target
        required: true
        type: string
      - description: target
        in: query
        name: param
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SearchContract'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Search Contract by contract_number, author, beneficiary
      tags:
      - search
  /search_history_ex/{id}:
    get:
      consumes:
      - application/json
      description: |-
        поиск либо по одним из параметров - contract_number, author, beneficiary:
        Примеры:
        1. target=contract_number&param=00001
        2. target=author&param=Иван
        3. target=beneficiary&param=ТОО «AK NIET GROUP
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: target
        in: query
        name: target
        required: true
        type: string
      - description: target
        in: query
        name: param
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SearchContract'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Search History Execution by contract_number, author, beneficiary
      tags:
      - search
  /search_notification:
    get:
      consumes:
      - application/json
      description: add by json account
      parameters:
      - description: contract_number
        in: query
        name: contract_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Notification'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Search Notification by Number
      tags:
      - search
  /users/:
    get:
      consumes:
      - application/json
      description: Get All Users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get All Users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Add by json user
      parameters:
      - description: Add user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Add an user
      tags:
      - users
  /users/{id}:
    delete:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update by json user
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update an user
      tags:
      - users
  /users/{id}/details:
    get:
      consumes:
      - application/json
      description: Get User by ID
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get User by ID
      tags:
      - users
  /users/search/{user_number}:
    get:
      consumes:
      - application/json
      description: Find User by Table Name
      parameters:
      - description: user number
        in: path
        name: user_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: integer
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get (Find) User by Table Name
      tags:
      - users
schemes:
- http
swagger: "2.0"
